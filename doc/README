CryptDB: http://css.csail.mit.edu/cryptdb
Wiki: https://github.com/burrows-labs/cryptdb-wiki/wiki/_pages

Convention : When this document uses syntax like
                single-quote text single-quote
                + 'some-text-here'
                + 'a second example'
             Such indicates that the reader is to use the value _without_
             the single-quotes.

#########################################
#########################################
########### Getting Started #############
#########################################
#########################################
    * Build CryptDB using the installation script.
      > scripts/install <path-to-cryptdb>
        + <path-to-cryptdb> should just be '.' if you are in the cryptdb
          directory
        + the script will likely require root privileges in order to
          install dependencies and mysql-proxy.
    * Username/Password
        By default cryptdb uses 'root' for the username and 'letmein'
        for the password. You can change this by modifying the source.
            + Tests: Currently the tests require root/letmein
            + Shell: main/cdb_test.cc line 109.
            + Proxy: mysqlproxy/wrapper.lua line 17.
    * Rebuildling CryptDB
        If you modify the source and want to rebuild, issue 'make' in the
        cryptdb directory.  If you change the UDFs you will also need to do
        'make install' (which will likely require root privilege).

#########################################
#########################################
####### A few ways to run CryptDB #######
#########################################
#########################################

    I. Shell
        > To Start: obj/main/cdb_test  ./shadow <some-database-name>
        > Type SQL queries that will be encrypted.

    II. Proxy
        > To Start: 
            export EDBDIR=./cryptdb/obj
            mysql-proxy --plugins=proxy --event-threads=4 \
                        --max-open-files=1024 \
                        --proxy-lua-script=$EDBDIR/../mysqlproxy/wrapper.lua \
                        --proxy-address=127.0.0.1:3307 \
                        --proxy-backend-addresses=localhost:3306

        > Connect to CryptDB: (where root/letmein are username/password)
            mysql -u root -pletmein -h 127.0.0.1 -P 3307 cryptdbtest
        > CREATE a database; USE it; Then type queries that will execute
          on encrypted data at the DB server!

    III. Tests
        > To Start:
            obj/test/test queries plain proxy-single

#########################################
#########################################
############ Failing queries ############
#########################################
#########################################

    > CryptDB currently supports a subset of MySQL's capabilities. Queries
      can fail for a few reasons.
      I) CryptDB can support the query, but we have not yet implemented it.
         This should throw an UNIMPLEMENTED exception.
      II) CryptDB can not support this type of query, likely
          cryptographic reasons. The error should include a message telling
          you more about the issue.

            For example if you issue this query to the shell.
            SELECT * FROM t WHERE x + 10 < 50

            You should get feedback. You will see that the feedback
            tells you the desired security level for the operation at
            each onion, and the current security level of each argument
            for each onion.

            In the case of this query, you can see that it would like
            to compare order with onion 1 (OPE), 4 (PLAIN) or 6 (WAIT).

            But if you look at it's first child "additive", you can see
            that it would like to use the HOM onion.  Because the HOM
            onion is not supported by the order operation, the query
            fails and gives you this error message.

            Look to the CryptDB paper for more information regarding
            how MySQL operations correspond to the cryptographic onions.
      III) State corruption (ie a bug in our code), this will likely lead
           to a crash.

#########################################
#########################################
################ Misc ###################
#########################################
#########################################

    > "purgatory" : If you see errors related to "purgatory"; you probably
       need to 'USE' a database.
    > For example queries, take a look at our tests test/TestQueries.cc
    > The benchmarks in the CryptDB paper are based on an older version of
      CryptDB and likely do not reflect current performance.  It is our
      intention to improve the performance of this new version.
    > Consider connecting directly to MySQL to see what is in the raw
      database.
    > Resetting state.
        > Take a look at scripts/refresh.sh ; you probably want that.
        > If you create a database in cryptdb and then reset
          the state without first dropping the database from _within_
          cryptdb; you will need to drop it from the regular mysql client.
    > Modifying the UDFs.
        + If you make changes to edb/udf.cc, you must reinstall the UDFs
          before your changes will take affect.
            > sudo service mysql stop
            > sudo make install
            > sudo service mysql start
    > This new version of CryptDB is only single principal. We are in the
      process of developling a new platform that more affectively addresses
      multiple principals.

